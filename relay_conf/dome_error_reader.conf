# Dome

[Publishers]
err:
  {
    'name': 'error',
    'data_class': std_msgs.msg.String,
    'latch': True,
    'queue_size': 1,
  }


[Subscribers]
din1:
  {
    'name': '/necctrl/cpz2724_rsw2/di16',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din2:
  {
    'name': '/necctrl/cpz2724_rsw2/di17',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din3:
  {
    'name': '/necctrl/cpz2724_rsw2/di18',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din4:
  {
    'name': '/necctrl/cpz2724_rsw2/di19',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din5:
  {
    'name': '/necctrl/cpz2724_rsw2/di20',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din6:
  {
    'name': '/necctrl/cpz2724_rsw2/di21',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }


[Logic]
code:
  e = []
  if din1==True: e.append('Sequencer')
  if din2==True: e.append('Inverter')
  if din3==True: e.append('Thermal')
  if din4==True: e.append('Communication')
  if din5==True: e.append('Sequencer(door/memb)')
  if din6==True: e.append('Inverter(door/memb)')
  msg = ','.join(e)
  err.publish(msg)
