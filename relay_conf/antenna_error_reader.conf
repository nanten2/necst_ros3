# Antenna

[Publishers]
err:
  {
    'name': 'error',
    'data_class': std_msgs.msg.String,
    'latch': True,
    'queue_size': 1,
  }


[Subscribers]
din1:
  {
    'name': '/necctrl/cpz2724_rsw0/di05',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din2:
  {
    'name': '/necctrl/cpz2724_rsw0/di06',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din3:
  {
    'name': '/necctrl/cpz2724_rsw0/di07',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din4:
  {
    'name': '/necctrl/cpz2724_rsw0/di08',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din5:
  {
    'name': '/necctrl/cpz2724_rsw0/di09',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din6:
  {
    'name': '/necctrl/cpz2724_rsw0/di10',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din7:
  {
    'name': '/necctrl/cpz2724_rsw0/di11',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din8:
  {
    'name': '/necctrl/cpz2724_rsw0/di12',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din9:
  {
    'name': '/necctrl/cpz2724_rsw0/di13',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din10:
  {
    'name': '/necctrl/cpz2724_rsw0/di14',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din11:
  {
    'name': '/necctrl/cpz2724_rsw0/di15',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din12:
  {
    'name': '/necctrl/cpz2724_rsw0/di16',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din13:
  {
    'name': '/necctrl/cpz2724_rsw0/di17',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din14:
  {
    'name': '/necctrl/cpz2724_rsw0/di18',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din15:
  {
    'name': '/necctrl/cpz2724_rsw0/di21',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din16:
  {
    'name': '/necctrl/cpz2724_rsw0/di22',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din17:
  {
    'name': '/necctrl/cpz2724_rsw0/di23',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

din18:
  {
    'name': '/necctrl/cpz2724_rsw0/di24',
    'data_class': std_msgs.msg.Bool,
    'queue_size': 1,
  }

[Logic]
code:
    e = []
    if din1==False: e.append("soft limit CW")
    if din2==False: e.append("soft limit CCW")
    if din3==False: e.append("soft limit UP")
    if din4==False: e.append("soft limit DOWN")
    if din5==False: e.append("1st limit CW")
    if din6==False: e.append("1st limit CCW")
    if din7==False: e.append("1st limit UP")
    if din8==False: e.append("1st limit DOWN")
    if din9==False: e.append("2nd limit CW")
    if din10==False: e.append("2nd limit CCW")
    if din11==False: e.append("2nd limit UP")
    if din12==False: e.append("2nd limit DOWN")
    if din13==False: e.append("cable_cw error")
    if din14==False: e.append("cable_ccw error")
    if din15==False: e.append("az_error")
    if din16==False: e.append("el_error")
    if din17==False: e.append("servo_error_az")
    if din18==False: e.append("servo_error_el")
    msg = ','.join(e)
    err.publish(msg)
